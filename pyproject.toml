[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "Axion-Sat"
version = "0.1.0"
description = "Advanced machine learning platform for satellite imagery analysis using transformer architectures and geospatial AI"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Axion-Sat Team", email = "team@axion-sat.example.com"}
]
keywords = [
    "satellite-imagery",
    "machine-learning",
    "transformers",
    "geospatial-ai",
    "earth-observation",
    "deep-learning",
    "pytorch"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: GIS",
]

# Core dependencies
dependencies = [
    "torch>=2.4.0",
    "torchvision>=0.19.0",
    "transformers>=4.30.0",
    "numpy>=1.24.0,<2.0",
    "gdal>=3.0.0",
    "rasterio>=1.3.0",
    "geopandas>=0.14.0",
    "xarray>=2023.1.0",
    "pystac-client>=0.5.0",
    "stackstac>=0.4.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.0.0",
    "httpx>=0.24.0",
    "orjson>=3.9.0",
    "matplotlib>=3.7.0",
    "pillow>=10.0.0",
    "pyyaml>=6.0",
    "tqdm>=4.65.0",
]

# Optional dependencies
[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]

ml = [
    "pytorch-lightning>=2.0.0",
    "torchmetrics>=1.0.0",
    "albumentations>=1.3.0",
    "kornia>=0.7.0",
    "timm>=0.9.0",
    "terratorch>=1.0.0",
    "xformers>=0.0.20",
]

geo = [
    "rioxarray>=0.14.0",
    "odc-stac>=0.3.0",
    "shapely>=2.0.0",
    "pyproj>=3.5.0",
    "folium>=0.14.0",
    "leafmap>=0.20.0",
]

notebook = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "ipywidgets>=8.0.0",
    "notebook>=7.0.0",
]

all = [
    "Axion-Sat[dev,ml,geo,notebook]"
]

[project.urls]
Homepage = "https://github.com/yourusername/Axion-Sat"
Documentation = "https://axion-sat.readthedocs.io"
Repository = "https://github.com/yourusername/Axion-Sat"
"Bug Tracker" = "https://github.com/yourusername/Axion-Sat/issues"

# Setuptools configuration
[tool.setuptools]
packages = ["vc_lib"]

[tool.setuptools.package-dir]
"" = "."

[tool.setuptools.package-data]
vc_lib = ["py.typed", "*.pyi"]

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--cov=vc_lib",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests that require GPU",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Black configuration
[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | cache
  | outputs
)/
'''

# Ruff configuration
[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".git",
    ".venv",
    "__pycache__",
    "build",
    "dist",
    "cache",
    "outputs",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py

[tool.ruff.isort]
known-first-party = ["vc_lib"]

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = [
    ".venv/*",
    "build/*",
    "dist/*",
    "cache/*",
    "outputs/*",
]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*",
    "transformers.*",
    "rasterio.*",
    "geopandas.*",
]
ignore_missing_imports = true

# Coverage configuration
[tool.coverage.run]
source = ["vc_lib"]
omit = [
    "*/tests/*",
    "*/__init__.py",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if False:",
    "if TYPE_CHECKING:",
]

# Scripts (use with: pip install -e ".[dev]")
[project.scripts]
axion-sat = "vc_lib.cli:main"

# Note: To use these tools, run:
# - Format code: black vc_lib/ app/ tests/
# - Lint code: ruff check vc_lib/ app/ tests/
# - Run tests: pytest tests/
# - Type check: mypy vc_lib/
